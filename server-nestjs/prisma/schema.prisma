// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id               Int       @id @default(autoincrement())
  name             String    @db.VarChar(255)
  slug             String    @unique @db.VarChar(100)
  domain           String?   @db.VarChar(255)
  subdomain        String?   @db.VarChar(100)
  description      String?   @db.Text
  logo             String?   @db.Text
  theme            Json?
  isActive         Boolean   @default(true) @map("is_active")
  settings         Json?
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @default(now()) @map("updated_at")

  // Relations
  users            User[]
  products         Product[]
  orders           Order[]
  bankAccounts     BankAccount[]
  celcoinAccounts  CelcoinAccount[]
  
  @@map("tenants")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  fullName  String   @map("full_name") @db.VarChar(255)
  tenantId  Int?     @map("tenant_id")
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  // Relations
  tenant    Tenant?  @relation(fields: [tenantId], references: [id])
  
  @@map("users")
}

model Product {
  id                    Int       @id @default(autoincrement())
  tenantId              Int       @map("tenant_id")
  name                  String    @db.VarChar(255)
  description           String?   @db.Text
  price                 Decimal   @db.Decimal(10, 2)
  stock                 Int       @default(0)
  isActive              Boolean   @default(true) @map("is_active")
  categoryId            Int?      @map("category_id")
  brandId               Int?      @map("brand_id")
  ncm                   String?   @db.VarChar(20)
  cest                  String?   @db.VarChar(20)
  cfop                  String?   @db.VarChar(10)
  icmsOrigin            String?   @map("icms_origin") @db.VarChar(2)
  icmsCst               String?   @map("icms_cst") @db.VarChar(5)
  icmsRate              Decimal?  @map("icms_rate") @db.Decimal(5, 2)
  ipiCst                String?   @map("ipi_cst") @db.VarChar(5)
  ipiRate               Decimal?  @map("ipi_rate") @db.Decimal(5, 2)
  pisCst                String?   @map("pis_cst") @db.VarChar(5)
  pisRate               Decimal?  @map("pis_rate") @db.Decimal(5, 2)
  cofinsCst             String?   @map("cofins_cst") @db.VarChar(5)
  cofinsRate            Decimal?  @map("cofins_rate") @db.Decimal(5, 2)
  productUnit           String    @default("UN") @map("product_unit") @db.VarChar(10)
  grossWeight           Decimal?  @map("gross_weight") @db.Decimal(8, 3)
  netWeight             Decimal?  @map("net_weight") @db.Decimal(8, 3)
  slug                  String?   @db.VarChar(255)
  metaTitle             String?   @map("meta_title") @db.VarChar(255)
  metaDescription       String?   @map("meta_description") @db.Text
  metaKeywords          String?   @map("meta_keywords") @db.Text
  promotionalPrice      Decimal?  @map("promotional_price") @db.Decimal(10, 2)
  promotionalStartDate  DateTime? @map("promotional_start_date")
  promotionalEndDate    DateTime? @map("promotional_end_date")
  priceB2b              Decimal?  @map("price_b2b") @db.Decimal(10, 2)
  priceB2c              Decimal?  @map("price_b2c") @db.Decimal(10, 2)
  rewardPointsB2b       Int       @default(0) @map("reward_points_b2b")
  rewardPointsB2c       Int       @default(0) @map("reward_points_b2c")
  availabilityDate      DateTime? @map("availability_date")
  requiresShipping      Boolean   @default(true) @map("requires_shipping")
  isDigital             Boolean   @default(false) @map("is_digital")
  hasUnlimitedStock     Boolean   @default(false) @map("has_unlimited_stock")
  sku                   String?   @db.VarChar(100)
  compareAtPrice        Decimal?  @map("compare_at_price") @db.Decimal(10, 2)
  costPrice             Decimal?  @map("cost_price") @db.Decimal(10, 2)
  minStock              Int       @default(0) @map("min_stock")
  maxStock              Int       @default(100) @map("max_stock")
  isFeatured            Boolean   @default(false) @map("is_featured")
  tags                  String?   @db.Text
  weight                Decimal?  @db.Decimal(8, 3)
  dimensionsLength      Decimal?  @map("dimensions_length") @db.Decimal(8, 2)
  dimensionsWidth       Decimal?  @map("dimensions_width") @db.Decimal(8, 2)
  dimensionsHeight      Decimal?  @map("dimensions_height") @db.Decimal(8, 2)
  createdAt             DateTime  @default(now()) @map("created_at")
  updatedAt             DateTime  @default(now()) @map("updated_at")

  // Relations
  tenant                Tenant    @relation(fields: [tenantId], references: [id])
  
  @@map("products")
}

model Order {
  id                    Int       @id @default(autoincrement())
  tenantId              Int       @map("tenant_id")
  customerName          String?   @map("customer_name") @db.Text
  customerEmail         String?   @map("customer_email") @db.Text
  total                 Decimal?  @db.Decimal(10, 2)
  status                String?   @db.Text
  paymentMethod         String?   @map("payment_method") @db.Text
  paymentStatus         String?   @map("payment_status") @db.Text
  celcoinTransactionId  String?   @map("celcoin_transaction_id") @db.Text
  customerDocument      String?   @map("customer_document") @db.VarChar(255)
  customerPhone         String?   @map("customer_phone") @db.VarChar(255)
  shippingAddress       Json?     @map("shipping_address")
  items                 Json?
  customerAddress       String?   @map("customer_address") @db.Text
  customerCity          String?   @map("customer_city") @db.Text
  customerState         String?   @map("customer_state") @db.Text
  customerZipCode       String?   @map("customer_zip_code") @db.Text
  taxTotal              Decimal?  @map("tax_total") @db.Decimal(10, 2)
  nfeKey                String?   @map("nfe_key") @db.Text
  nfeNumber             String?   @map("nfe_number") @db.Text
  nfeStatus             String?   @map("nfe_status") @db.Text
  nfeXml                String?   @map("nfe_xml") @db.Text
  nfeProtocol           String?   @map("nfe_protocol") @db.Text
  nfeErrorMessage       String?   @map("nfe_error_message") @db.Text
  trackingCode          String?   @map("tracking_code") @db.Text
  notes                 String?   @db.Text
  createdAt             DateTime? @map("created_at")
  updatedAt             DateTime? @map("updated_at")

  // Relations
  tenant                Tenant    @relation(fields: [tenantId], references: [id])
  
  @@map("orders")
}

model Customer {
  id          Int       @id @default(autoincrement())
  tenantId    Int?      @map("tenant_id")
  email       String?   @db.VarChar(255)
  password    String?   @db.VarChar(255)
  firstName   String?   @map("first_name") @db.VarChar(255)
  lastName    String?   @map("last_name") @db.VarChar(255)
  phone       String?   @db.VarChar(255)
  cpf         String?   @db.VarChar(255)
  birthDate   DateTime? @map("birth_date")
  isActive    Boolean?  @map("is_active")
  createdAt   DateTime? @map("created_at")
  updatedAt   DateTime? @map("updated_at")

  @@map("customers")
}

model BankAccount {
  id                    Int      @id @default(autoincrement())
  tenantId              Int      @map("tenant_id")
  accountType           String   @map("account_type") @db.VarChar(20)
  bankCode              String   @map("bank_code") @db.VarChar(10)
  bankName              String   @map("bank_name") @db.VarChar(255)
  agencyNumber          String   @map("agency_number") @db.VarChar(10)
  accountNumber         String   @map("account_number") @db.VarChar(20)
  accountDigit          String?  @map("account_digit") @db.VarChar(2)
  accountHolderName     String   @map("account_holder_name") @db.VarChar(255)
  accountHolderDocument String   @map("account_holder_document") @db.VarChar(20)
  isDefault             Boolean  @default(false) @map("is_default")
  isActive              Boolean  @default(true) @map("is_active")
  verificationStatus    String   @default("pending") @map("verification_status") @db.VarChar(20)
  verifiedAt            DateTime? @map("verified_at")
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @default(now()) @map("updated_at")

  // Relations
  tenant                Tenant   @relation(fields: [tenantId], references: [id])
  
  @@map("bank_accounts")
}

model CelcoinAccount {
  id               Int      @id @default(autoincrement())
  tenantId         Int      @map("tenant_id")
  celcoinAccountId String   @map("celcoin_account_id") @db.VarChar(255)
  status           String   @default("active") @map("status") @db.VarChar(20)
  balance          Decimal  @default(0) @db.Decimal(15, 2)
  blockedBalance   Decimal  @default(0) @map("blocked_balance") @db.Decimal(15, 2)
  accountType      String   @map("account_type") @db.VarChar(50)
  lastSyncAt       DateTime? @map("last_sync_at")
  syncFrequency    Int      @default(300) @map("sync_frequency")
  isActive         Boolean  @default(true) @map("is_active")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @default(now()) @map("updated_at")

  // Relations
  tenant           Tenant   @relation(fields: [tenantId], references: [id])
  
  @@map("celcoin_accounts")
}

// Session storage for authentication
model Session {
  sid    String   @id @db.VarChar(255)
  sess   Json
  expire DateTime

  @@index([expire], name: "IDX_session_expire")
  @@map("sessions")
}